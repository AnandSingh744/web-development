<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="MachinE_InstructionS" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="R-R" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Fielddc49910">
	</Field>
	<Field name="ADDRESS" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field3917a44e">
	</Field>
	<Field name="OPCODE" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field3e109f7a">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register5eb4b093" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register754cf9e9" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register521d66f4" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register3d2fde0" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register7819f521" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register6a88c87a" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register531b2919" />
	<Register name="OUTPR" width="8" initialValue="0" readOnly="false" id="model.module.Register4732f367" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register7035a65d" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register672aa26" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<!-- none -->

	<!--............. rams ..........................-->
	<RAM name="RAM" length="4096" cellSize="16" id="model.module.RAM5ba8e3fb" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register5eb4b093" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet1366e6c2" />
	<Set name="E&lt;-0" register="model.module.Register3d2fde0" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet657ce8ca" />
	<Set name="S&lt;-0" register="model.module.Register672aa26" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet177d962c" />

	<!--............. test ..........................-->
	<Test name="IF AC&lt;0 [I=1]" register="model.module.Register5eb4b093" start="0" numBits="1" comparison="EQ" value="1" omission="1" id="model.microinstruction.Test730b350b" />
	<Test name="IF AC=0" register="model.module.Register5eb4b093" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test577f9d5e" />
	<Test name="IF AC&gt;0" register="model.module.Register5eb4b093" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test55c715c3" />
	<Test name="IF E=0" register="model.module.Register3d2fde0" start="0" numBits="1" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test2e7035a1" />
	<Test name="test-DR" register="model.module.Register521d66f4" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4f9ee09" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register5eb4b093" delta="1" id="model.microinstruction.Increment2fc706a5" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register754cf9e9" delta="1" id="model.microinstruction.Increment42436793" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register521d66f4" delta="1" id="model.microinstruction.Increment6db19f47" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register7035a65d" delta="1" id="model.microinstruction.Increment2673ad5e" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<Logical name="AND" type="AND" source1="model.module.Register5eb4b093" source2="model.module.Register521d66f4" destination="model.module.Register5eb4b093" id="model.microinstruction.Logical32385783" />
	<Logical name="COMPLEMENT-AC" type="NOT" source1="model.module.Register5eb4b093" source2="model.module.Register5eb4b093" destination="model.module.Register5eb4b093" id="model.microinstruction.Logical30845262" />
	<Logical name="COMPLEMENT-E" type="NOT" source1="model.module.Register3d2fde0" source2="model.module.Register3d2fde0" destination="model.module.Register3d2fde0" id="model.microinstruction.Logical5fc125ec" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register5eb4b093" source2="model.module.Register521d66f4" destination="model.module.Register5eb4b093" id="model.microinstruction.Arithmetic697bbbd" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register3d2fde0" srcStartBit="0" dest="model.module.Register5eb4b093" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR76e370a3" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register3d2fde0" srcStartBit="0" dest="model.module.Register5eb4b093" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR64e63b5f" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register521d66f4" srcStartBit="0" dest="model.module.Register5eb4b093" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR32de8c6a" />
	<TransferRtoR name="AR&lt;-IR[4-15]" source="model.module.Register531b2919" srcStartBit="4" dest="model.module.Register754cf9e9" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR92f93df" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register7035a65d" srcStartBit="0" dest="model.module.Register754cf9e9" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR64a48c31" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Register5eb4b093" srcStartBit="0" dest="model.module.Register3d2fde0" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR314d7f39" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register5eb4b093" srcStartBit="15" dest="model.module.Register3d2fde0" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR773608a6" />
	<TransferRtoR name="I&lt;-IR[0]" source="model.module.Register531b2919" srcStartBit="0" dest="model.module.Register7819f521" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR272dcf4" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register754cf9e9" srcStartBit="0" dest="model.module.Register7035a65d" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR5f2d5ed2" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR" ir="model.module.Register531b2919" id="model.microinstruction.Decode4bacacbf" />

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<IO name="INPUT" direction="input" type="integer" buffer="model.module.Register5eb4b093" connection="[Console]" id="model.microinstruction.IO3131a0bc" />
	<IO name="OUTPUT" direction="output" type="integer" buffer="model.module.Register5eb4b093" connection="[Console]" id="model.microinstruction.IO347119b9" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM5ba8e3fb" data="model.module.Register754cf9e9" address="model.module.Register754cf9e9" id="model.microinstruction.MemoryAccess314d5b30" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM5ba8e3fb" data="model.module.Register521d66f4" address="model.module.Register754cf9e9" id="model.microinstruction.MemoryAccess61b688a8" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM5ba8e3fb" data="model.module.Register531b2919" address="model.module.Register754cf9e9" id="model.microinstruction.MemoryAccess54d89182" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM5ba8e3fb" data="model.module.Register5eb4b093" address="model.module.Register754cf9e9" id="model.microinstruction.MemoryAccess7abf16f2" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM5ba8e3fb" data="model.module.Register521d66f4" address="model.module.Register754cf9e9" id="model.microinstruction.MemoryAccess21f0564e" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM5ba8e3fb" data="model.module.Register7035a65d" address="model.module.Register754cf9e9" id="model.microinstruction.MemoryAccess74d67910" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End6492a289" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR64a48c31" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess54d89182" />
		<Microinstruction microRef="model.microinstruction.Increment2673ad5e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR272dcf4" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR92f93df" />
		<Microinstruction microRef="model.microinstruction.Decode4bacacbf" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#d1edd3" assemblyColors="#d1edd3" >
		<Microinstruction microRef="model.microinstruction.IO347119b9" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#949986" assemblyColors="#949986" >
		<Microinstruction microRef="model.microinstruction.IO3131a0bc" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#f3eefe" assemblyColors="#f3eefe" >
		<Microinstruction microRef="model.microinstruction.CpusimSet177d962c" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#f5fabc" assemblyColors="#f5fabc" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR773608a6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR76e370a3" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#f8918b" assemblyColors="#f8918b" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR314d7f39" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR64e63b5f" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="7002" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#9fc3b7" assemblyColors="#9fc3b7" >
		<Microinstruction microRef="model.microinstruction.Test2e7035a1" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
		<Microinstruction microRef="model.microinstruction.Increment2673ad5e" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#e2bfa8" assemblyColors="#e2bfa8" >
		<Microinstruction microRef="model.microinstruction.Test577f9d5e" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
		<Microinstruction microRef="model.microinstruction.Increment2673ad5e" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#eef495" assemblyColors="#eef495" >
		<Microinstruction microRef="model.microinstruction.Test730b350b" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
		<Microinstruction microRef="model.microinstruction.Increment2673ad5e" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#ccc1b5" assemblyColors="#ccc1b5" >
		<Microinstruction microRef="model.microinstruction.Test55c715c3" />
		<Microinstruction microRef="model.microinstruction.Increment2673ad5e" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#92a1e9" assemblyColors="#92a1e9" >
		<Microinstruction microRef="model.microinstruction.Increment2fc706a5" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#9fcce0" assemblyColors="#9fcce0" >
		<Microinstruction microRef="model.microinstruction.Logical5fc125ec" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#c3e081" assemblyColors="#c3e081" >
		<Microinstruction microRef="model.microinstruction.Logical30845262" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#edf4a3" assemblyColors="#edf4a3" >
		<Microinstruction microRef="model.microinstruction.CpusimSet657ce8ca" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="7800" instructionFormat="R-R" assemblyFormat="R-R" instructionColors="#d9efb2" assemblyColors="#d9efb2" >
		<Microinstruction microRef="model.microinstruction.CpusimSet1366e6c2" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="ISZ-I" opcode="e" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#8cd791 #ad9ef9" assemblyColors="#8cd791 #ad9ef9" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess314d5b30" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.Increment6db19f47" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess21f0564e" />
		<Microinstruction microRef="model.microinstruction.Test4f9ee09" />
		<Microinstruction microRef="model.microinstruction.Increment2673ad5e" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#e0dfd7 #83e398" assemblyColors="#e0dfd7 #83e398" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.Increment6db19f47" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess21f0564e" />
		<Microinstruction microRef="model.microinstruction.Test4f9ee09" />
		<Microinstruction microRef="model.microinstruction.Increment2673ad5e" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="BSA-I" opcode="d" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#92c6ee #85a4fa" assemblyColors="#92c6ee #85a4fa" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess314d5b30" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess74d67910" />
		<Microinstruction microRef="model.microinstruction.Increment42436793" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5f2d5ed2" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#a3ece8 #b1a9c7" assemblyColors="#a3ece8 #b1a9c7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess74d67910" />
		<Microinstruction microRef="model.microinstruction.Increment42436793" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5f2d5ed2" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="BUN-I" opcode="c" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#81f2cf #bed1d6" assemblyColors="#81f2cf #bed1d6" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess314d5b30" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5f2d5ed2" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#ee8c9a #eda3a1" assemblyColors="#ee8c9a #eda3a1" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR5f2d5ed2" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="STA-I" opcode="b" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#e2e5c8 #d1f598" assemblyColors="#e2e5c8 #d1f598" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess314d5b30" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7abf16f2" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#d5f3ec #c0bbcb" assemblyColors="#d5f3ec #c0bbcb" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess7abf16f2" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="LDA-I" opcode="a" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#a4a1d6 #a5c997" assemblyColors="#a4a1d6 #a5c997" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess314d5b30" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR32de8c6a" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#a0d1bb #88feab" assemblyColors="#a0d1bb #88feab" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR32de8c6a" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="ADD-I" opcode="9" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#a4f4cb #9cacc5" assemblyColors="#a4f4cb #9cacc5" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess314d5b30" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.Arithmetic697bbbd" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="AND-I" opcode="8" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#99f49f #fae6db" assemblyColors="#99f49f #fae6db" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess314d5b30" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.Logical32385783" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#9eacf9 #cdf0e3" assemblyColors="#9eacf9 #cdf0e3" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.Arithmetic697bbbd" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OPCODE ADDRESS" assemblyFormat="OPCODE ADDRESS" instructionColors="#fbf096 #c5d7ab" assemblyColors="#fbf096 #c5d7ab" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess61b688a8" />
		<Microinstruction microRef="model.microinstruction.Logical32385783" />
		<Microinstruction microRef="model.microinstruction.End6492a289" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM5ba8e3fb" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
